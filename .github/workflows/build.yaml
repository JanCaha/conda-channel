name: Build packages

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on: 
  - push
  - workflow_dispatch
  schedule:
    - cron: '0 0 1 * *'  # Run at 00:00 UTC on the 1st day of every month

env:
  python-version: 3.13

jobs:

  Build-and-Deploy-Linux:

    name: Build and deploy Linux packages

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    permissions:
      contents: write

    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          use-mamba: true
          channels: conda-forge,defaults
          auto-activate-base: true
          python-version: ${{ env.python-version }}
          activate-environment: true
      
      - name: Install conda-build
        run: |
          conda install -n base conda-build conda-verify conda-index sqlite

      - name: Clone and build libsimplerasters
        run: |
          gh repo clone JanCaha/cpp-simplerasters
          cd cpp-simplerasters
          conda build conda --variant-config-files conda/variants/unix.yaml
          conda install --use-local libsimplerasters
          cd ..
          rm -rf cpp-simplerasters
      
      - name: Clone and build libviewshed
        run: |
          gh repo clone JanCaha/cpp-viewshed-library -- --recurse-submodules
          cd cpp-viewshed-library
          conda build conda --variant-config-files conda/variants/unix.yaml
          conda install --use-local libviewshed
          cd ..
          rm -rf cpp-viewshed-library
      
      - name: Clone and build viewshed
        run: |
          gh repo clone JanCaha/viewshed-library-pybind11 -- --recurse-submodules
          cd viewshed-library-pybind11
          conda build conda --variant-config-files conda/variants/unix.yaml
          conda install --use-local viewshed
          cd ..
          rm -rf viewshed-library-pybind11

      - name: Copy to directory
        run: |
          mkdir -p linux-64
          cp $CONDA/conda-bld/linux-64/*.conda linux-64

      - name: List packages
        run: |
          ls -l linux-64   

      - uses: actions/upload-artifact@v4
        with:
          name: linux-64
          path: linux-64/

  
  Build-and-Deploy-Windows:

    name: Build and deploy Windows packages
    
    runs-on: windows-latest
    
    defaults:
      run:
        shell: cmd

    env:
      GH_TOKEN: ${{ github.token }}
      LIBARCHIVE: C:\Miniconda\Library\bin\archive.dll

    steps:

      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          use-mamba: true
          channels: conda-forge,defaults
          auto-activate-base: true
          python-version: ${{ env.python-version }}
          activate-environment: true
      
      - name: Install conda-build
        run: |
          conda install -n base conda-build conda-verify

      - name: Clone and build libsimplerasters
        shell: cmd
        run: |
          gh repo clone JanCaha/cpp-simplerasters
          cd cpp-simplerasters
          conda build conda --variant-config-files conda/variants/windows.yaml
          conda install --use-local libsimplerasters
          cd ..
          rmdir /s /q cpp-simplerasters

      - name: Clone and build libviewshed
        shell: cmd
        run: |
          gh repo clone JanCaha/cpp-viewshed-library -- --recurse-submodules
          cd cpp-viewshed-library
          conda build conda --variant-config-files conda/variants/windows.yaml
          conda install --use-local libviewshed
          cd ..
          rmdir /s /q cpp-viewshed-library
      
      - name: Clone and build viewshed
        shell: cmd
        run: |
          gh repo clone JanCaha/viewshed-library-pybind11 -- --recurse-submodules
          cd viewshed-library-pybind11
          conda build conda --variant-config-files conda/variants/windows.yaml
          conda install --use-local viewshed
          cd ..
          rmdir /s /q viewshed-library-pybind11
      
      - name: Copy to directory
        run: |
          mkdir win-64
          copy %CONDA%\conda-bld\win-64\*.conda win-64

      - name: List packages
        run: |
          dir win-64

      - uses: actions/upload-artifact@v4
        with:
          name: win-64
          path: win-64/
  
  Build-and-Deploy-macOS:

    name: Build and deploy macOS packages

    runs-on: macos-latest

    defaults:
      run:
        shell: bash -l {0}

    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          use-mamba: true
          channels: conda-forge,defaults
          auto-activate-base: true
          python-version: ${{ env.python-version }}
          activate-environment: true

      - name: Install conda-build
        run: |
          conda install -n base conda-build conda-verify conda-index sqlite

      - name: Clone and build libsimplerasters
        run: |
          gh repo clone JanCaha/cpp-simplerasters
          cd cpp-simplerasters
          conda build conda --variant-config-files conda/variants/unix.yaml
          conda install --use-local libsimplerasters
          cd ..
          rm -rf cpp-simplerasters

      - name: Clone and build libviewshed
        run: |
          gh repo clone JanCaha/cpp-viewshed-library -- --recurse-submodules
          cd cpp-viewshed-library
          conda build conda --variant-config-files conda/variants/unix.yaml
          conda install --use-local libviewshed
          cd ..
          rm -rf cpp-viewshed-library

      - name: Clone and build viewshed
        run: |
          gh repo clone JanCaha/viewshed-library-pybind11 -- --recurse-submodules
          cd viewshed-library-pybind11
          conda build conda --variant-config-files conda/variants/unix.yaml
          conda install --use-local viewshed
          cd ..
          rm -rf viewshed-library-pybind11

      - name: Copy to directory
        run: |
          mkdir -p osx-arm64
          cp $CONDA/conda-bld/osx-arm64/*.conda osx-arm64

      - name: List packages
        run: |
          ls -l osx-arm64 

      - uses: actions/upload-artifact@v4
        with:
          name: osx-arm64
          path: osx-arm64/

  Build-Conda-Channel-Push-to-GithubPages:

    name: Build Conda Channel and push to GitHub Pages

    runs-on: ubuntu-latest

    needs: [Build-and-Deploy-Linux, Build-and-Deploy-Windows, Build-and-Deploy-macOS]

    defaults:
      run:
        shell: bash -l {0}
    
    permissions:
      contents: write

    steps:

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          use-mamba: true
          channels: conda-forge,defaults
          auto-activate-base: true
          activate-environment: ""

      - name: Install conda-build
        run: |
          conda install -n base conda-build conda-index  

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-64
          path: linux-64

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: win-64
          path: win-64

      - name: Download MacOS artifact
        uses: actions/download-artifact@v4
        with:
          name: osx-arm64
          path: osx-arm64

      - name: Conda index
        run: |
          conda index .

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
            commit_message: New package versions
            branch: gh-pages
